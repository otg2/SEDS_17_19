{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Lab2_3.3","version":"0.3.2","views":{},"default_view":{},"provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"b8XZahpUVTbw","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["import tensorflow as tf\n","import numpy as np\n","import math\n","import matplotlib.pyplot as plt\n","\n","Noisydata = False\n","stdev = 0.1\n","\n","# Data Generation\n","\n","data = np.array(np.arange(0, math.pi*2 + 0.1, 0.1))\n","data_test = np.array(np.arange(0.05, math.pi*2+0.1, 0.1))\n","\n","\n","x_data = np.transpose([data])\n","x_data_test = np.transpose([data_test])\n","\n","# Sin\n","def sinFunc(x):\n","  return np.sin(2*x)\n","\n","\n","if(Noisydata):\n","  y_sinData = sinFunc(x_data) + np.transpose([np.random.normal(0,stdev,len(x_data))]) \n","  y_sinData_test = sinFunc(x_data_test)  \n","else:\n","  y_sinData = sinFunc(x_data)\n","  y_sinData_test = sinFunc(x_data_test) \n","\n","# Change this to change data\n","dataUsed = x_data\n","\n","targetUsed = y_sinData\n","\n","\n","nodesIn = np.shape(dataUsed)[1]\n","nodesOut = np.shape(targetUsed)[1]\n","\n","nDataPoints = len(dataUsed)\n","nDataPoints_Range = range(nDataPoints)\n","\n","#print(np.shape(mu))\n","#print(np.shape(hidden))\n","#print(np.shape(dataUsed))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"yjROp6bRWupL","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1},{"item_id":2}],"base_uri":"https://localhost:8080/","height":382},"outputId":"280f4cb7-cb5b-4339-ab21-68b26dfa1f72","executionInfo":{"status":"ok","timestamp":1518705606936,"user_tz":-60,"elapsed":676,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["import random\n","from copy import deepcopy\n","\n","updateNeighbours = True\n","\n","sigma = 0.9\n","RBFNodes = 4\n","hidden = np.zeros((nDataPoints,RBFNodes))\n","weights = np.zeros((nodesIn,RBFNodes))\n","\n","\n","print(np.shape(hidden))\n","print(np.shape(weights))\n","\n","\n","#weights = np.random.rand(nodesIn,RBFNodes)# np.zeros((nodesIn,RBFNodes))\n","\n","# Random initialization of RBF means\n","mu = np.max(dataUsed)*np.random.rand(RBFNodes,nodesIn) \n","\n","muOriginal = deepcopy(mu)\n","\n","eta = 0.1\n","\n","# CL- Algorithm for computing the positions (means) of the RBF's\n","\n","for i in range(int(nDataPoints / 3)): # nDataPoints_Range\n","  #a training vector is randomly selected from the data.\n","  randPos = random.randint(0,nDataPoints-1)\n","  trainVector = dataUsed[randPos]\n","  # closest RBF unit (usually called the winning unit) is computed,\n","  response = np.absolute(mu-trainVector) # mu * trainVector\n","  responseMaxIndex = np.argmin(response)\n","  responseMax = np.min(response)\n","  \n","  # updated, in such a way that it gets closer to the training vector\n","  dist = 1\n","  if(trainVector < mu[responseMaxIndex]):\n","    dist = -1\n","  mu[responseMaxIndex] = mu[responseMaxIndex]  + responseMax * eta *dist\n","  # Avoid Dead units\n","  if(updateNeighbours):\n","    #Find closest 25% and update them by 25% of the other update\n","    N_response = np.absolute(mu-mu[responseMaxIndex])\n","    N_range = np.max(N_response) * 0.25\n","\n","    for k in range(len(N_response)):\n","      if(N_response[k] < N_range):\n","        dist = 1\n","        if(trainVector < mu[k]):\n","          dist = -1\n","        mu[k] = mu[k]  + responseMax * eta *dist * N_range\n","\n","plt.plot(dataUsed,y_sinData,'g')\n","plt.plot(mu,np.zeros(RBFNodes),'r*')\n","#plt.plot(muOriginal,np.zeros(RBFNodes),'b*')\n","\n","plt.show()  "],"execution_count":85,"outputs":[{"output_type":"stream","text":["(64, 4)\n","(1, 4)\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x7fdf096a26d8>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"-IyE2vhPgQTZ","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":35},"outputId":"276638df-97de-4f57-bd76-d088b6ae835b","executionInfo":{"status":"ok","timestamp":1518705610286,"user_tz":-60,"elapsed":526,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["#Sequential computation of weights\n","eta = 0.001\n","epoch = 1\n","p_errorInc = []\n","\n","for i in range(RBFNodes):\n","  hidden[:,i] = np.exp((-(np.transpose(dataUsed)-mu[i])**2)/(2*sigma**2)) \n","\n","\n","for k in range(nDataPoints):\n","  e =(targetUsed[k]-np.matmul(hidden[k,:],np.transpose(weights)))\n","  deltaW = eta*e*hidden[k,:]\n","  weights=weights+deltaW\n","  error_incremental = np.sqrt(np.mean((np.matmul(hidden,np.transpose(weights))-targetUsed))**2)\n","\n","p_errorInc.append(error_incremental)\n","  \n","\n","print(p_errorInc)  "],"execution_count":86,"outputs":[{"output_type":"stream","text":["[0.0031042041170290403]\n"],"name":"stdout"}]},{"metadata":{"id":"iVQydFElksIl","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["!pip install --upgrade -q gspread\n","\n","from google.colab import auth\n","auth.authenticate_user()"],"execution_count":0,"outputs":[]},{"metadata":{"id":"IJ8zeap3GnIU","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":["#IMPORT AUTH\n","from oauth2client.client import GoogleCredentials\n","\n","import gspread\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","\n","gc = gspread.authorize(GoogleCredentials.get_application_default())\n","\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"ObYNqiZ9BHyE","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"-8a_He3Xko5I","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":35},"outputId":"40282d0f-881f-42d8-d883-90128715921e","executionInfo":{"status":"ok","timestamp":1518699130010,"user_tz":-60,"elapsed":7223,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["# IMPORT DATA\n","\n","worksheet = gc.open('Lab2_Ballist').sheet1\n","rows = worksheet.get_all_values()\n","dataArr = pd.DataFrame.from_records(rows)\n","\n","train_x = np.array([[0,0]]) # Angle and velocity\n","test_x = np.array([[0,0]]) # ditance and height\n","\n","train_y = np.array([[0,0]])\n","test_y = np.array([[0,0]])\n","\n","testFlag = False\n","# The first row is labels, \n","for i in range(len(dataArr)-1):\n","  index = 1+i\n","  val_x = dataArr[0][index].split(' ')\n","  val_y = dataArr[1][index].split(' ')\n","  \n","  if(len(val_x) > 1):\n","    val_x = np.array([[float(val_x[0]), float(val_x[1])]])\n","    val_y = np.array([[float(val_y[0]), float(val_y[1])]])\n","\n","  if(testFlag == False):\n","    if(val_x[0] == \"TEST\"):\n","      testFlag = True\n","    else:\n","      train_x = np.concatenate((train_x,val_x),axis=0)\n","      train_y = np.concatenate((train_y,val_y),axis=0)\n","\n","  else:\n","    test_x = np.concatenate((test_x,val_x),axis=0)\n","    test_y = np.concatenate((test_y,val_y),axis=0)\n","\n","# Remove dummy [0,0] in the beginning\n","train_x = np.delete(train_x, 0, 0)\n","train_y = np.delete(train_y, 0, 0)\n","test_x = np.delete(test_x, 0, 0)\n","test_y = np.delete(test_y, 0, 0)\n","  "],"execution_count":30,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:24: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n"],"name":"stderr"}]},{"metadata":{"id":"pcFf5y996WOy","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":35},"outputId":"0ce5e97a-dd23-4be8-a271-3c11a8296619","executionInfo":{"status":"ok","timestamp":1518699875696,"user_tz":-60,"elapsed":536,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["# Change this to change data\n","dataUsed1 = train_x\n","targetUsed1 = train_y\n","\n","\n","#print(dataUsed1)\n","#print(\"target\")\n","#print(targetUsed1)\n","\n","RBFNodes1 = 8\n","\n","nodesIn1 = np.shape(dataUsed1)[1]\n","nodesOut1 = np.shape(targetUsed1)[1]\n","\n","nDataPoints1 = len(dataUsed1)\n","nDataPoints_Range1 = range(nDataPoints1)\n","\n","hidden1 = np.zeros((nDataPoints1,RBFNodes1))\n","hiddenTest = np.zeros((len(test_x),RBFNodes1))\n","\n","\n","weights1 = np.zeros((nodesIn1,RBFNodes1))\n","\n","# Random initialization of RBF means\n","muNew =0.5*np.random.rand(RBFNodes1,nodesIn1) \n","\n","import random\n","from copy import deepcopy\n","\n","muOriginalNew = deepcopy(muNew)\n","\n","eta = 1# 0.1\n","randomPoints = []\n","for i in range(int(nDataPoints1 / 1.80)):\n","  randomPoints.append(random.randint(0,nDataPoints1-1))\n","  \n","print(\"clster set by \" +str(len(randomPoints)) + \" many points\"  )\n"],"execution_count":78,"outputs":[{"output_type":"stream","text":["clster set by 55 many points\n"],"name":"stdout"}]},{"metadata":{"id":"lMcySElJJDxp","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1},{"item_id":2}],"base_uri":"https://localhost:8080/","height":677},"outputId":"d6d76376-b01c-4ee4-94ed-ef03d7e51039","executionInfo":{"status":"ok","timestamp":1518699915145,"user_tz":-60,"elapsed":1227,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["\n","eta = 0.8\n","neighbourRange = 0.65\n","\n","# Please be careful with the selection of a suitable number of\n","# nodes and their initialisation to avoid dead-unit and overfitting problems.\n","\n","useCL = True\n","\n","updateNeighbours1 = False\n","mu1 = deepcopy(muNew)\n","muOriginal1 = deepcopy(muOriginalNew)\n","\n","clusterData = dataUsed1\n","\n","# CL- Algorithm for computing the positions (means) of the RBF's\n","if(useCL):\n","  for i in range(len(randomPoints)): \n","    #a training vector is randomly selected from the data.\n","    randPos = randomPoints[i]#  random.randint(0,nDataPoints1-1)\n","    trainVector = clusterData[randPos]\n","    # closest RBF unit (usually called the winning unit) is computed,\n","    response = np.sqrt(np.sum((mu1-trainVector)**2,axis=1)) \n","    responseMaxIndex = np.argmin(response)\n","    responseMax = np.min(response)\n","\n","    #print(\"select \" + str(responseMaxIndex))\n","    #print(\"target\")\n","    #print(trainVector)\n","    #print(\"selec value\")\n","    #print(mu1[responseMaxIndex])\n","    # updated, in such a way that it gets closer to the training vector\n","    dist_x = 1\n","    dist_y = 1\n","    if(trainVector[0] < mu1[responseMaxIndex][0]):\n","      dist_x = -1\n","    if(trainVector[1] < mu1[responseMaxIndex][1]):\n","      dist_y = -1\n","    updateX = np.abs(trainVector[0] - mu1[responseMaxIndex][0]) * dist_x\n","    updateY = np.abs(trainVector[1] - mu1[responseMaxIndex][1]) * dist_y\n","\n","    mu1[responseMaxIndex][0] = mu1[responseMaxIndex][0]  + updateX * eta \n","    mu1[responseMaxIndex][1] = mu1[responseMaxIndex][1]  + updateY * eta \n","    #print(\"update is\")\n","    #print(mu1[responseMaxIndex])\n","    # Avoid Dead units\n","    #print(\"round: \" + str(i))\n","    if(updateNeighbours1):\n","      #Find closest 25% and update them by 25% of the other update\n","      N_response1 = np.sqrt(np.sum((mu1-mu1[responseMaxIndex])**2,axis=1)) #np.absolute(mu1-mu1[responseMaxIndex])\n","      N_range1 = np.max(N_response1) * neighbourRange\n","      for k in range(len(N_response1)):\n","        if(N_response1[k] < N_range1 and k != responseMaxIndex):\n","          dist_x = 1\n","          dist_y = 1\n","          if(mu1[responseMaxIndex][0] < mu1[k][0] ):\n","            dist_x = -1\n","          if(mu1[responseMaxIndex][1] < mu1[k][1]  ):\n","            dist_y = -1\n","          updateX = np.abs(mu1[k][0] - mu1[responseMaxIndex][0]) * dist_x\n","          updateY = np.abs(mu1[k][1] - mu1[responseMaxIndex][1]) * dist_y\n","\n","          mu1[k][0] += updateX * neighbourRange  #* N_range1\n","          mu1[k][1] += updateY * neighbourRange  #* N_range1\n","\n","    mu1Disp = np.transpose(mu1) \n","    curPos = i/len(randomPoints)\n","    #decay of neighbourRange\n","    neighbourRange -= neighbourRange * curPos * 0.1\n","    plt.scatter(mu1Disp[0],mu1Disp[1],c=(curPos,1-curPos,0),alpha=curPos, s=40)\n","\n","  muOriginal1Disp = np.transpose(muOriginal1)      \n","  plt.scatter(muOriginal1Disp[0],muOriginal1Disp[1], c='g', alpha=0.7)\n","\n","  plt.show()   \n","  \"\"\"print(\"was\")\n","  print(muOriginal1)        \n","  print(\"is\")  \n","  print(mu1)     \n","  print(\"diff\")\n","  print(mu1-muOriginal1)\"\"\"\n","\n","  targetDisp = np.transpose(clusterData)\n","  mu1Disp = np.transpose(mu1)   \n","  muOriginal1Disp = np.transpose(muOriginal1)      \n","\n","  plt.scatter(targetDisp[0],targetDisp[1],c='b',alpha=0.5)\n","  plt.scatter(muOriginal1Disp[0],muOriginal1Disp[1], c='g', alpha=0.7, s=40)\n","  plt.scatter(mu1Disp[0],mu1Disp[1],c='r',alpha=1, s=80)\n","\n","  plt.show()  "],"execution_count":81,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x7fdf09b46588>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<matplotlib.figure.Figure at 0x7fdf09b97c88>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"Mx_kXPZrlDXw","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0},"output_extras":[{"item_id":1}],"base_uri":"https://localhost:8080/","height":88},"outputId":"a1986066-dc50-4481-b287-a255645e648c","executionInfo":{"status":"ok","timestamp":1518699882137,"user_tz":-60,"elapsed":494,"user":{"displayName":"Óttar Guðmundsson","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s128","userId":"111977628385601669155"}}},"cell_type":"code","source":["\n","\n","#Sequential computation of weights\n","eta1 = 0.001\n","p_errorInc = []\n","sigma =0.9\n","\n","C = np.array([[sigma,0] ,[0,sigma]])\n","\n","#print(np.shape(hidden))\n","#print(np.shape(weights))\n","#print(np.shape(mu))\n","#(64, 8)\n","#(1, 8)\n","#(8,1)\n","print(np.shape(hidden1))\n","print(np.shape(weights1))\n","print(np.shape(mu1))\n","#print(dataUsed1)\n","#print(mu1)\n","\n","#(100, 8)\n","#(2, 8)\n","#(8,2)\n","\"\"\"\n","(1, 64)\n","(1, 64)\n","(64,)\n","\n","(2, 100)\n","(100, 8)\n","(100,)\n","\n","\"\"\"\n","\n","for i in range(RBFNodes1): \n","  for j in range(len(dataUsed1)):\n","    a = np.transpose(dataUsed1[j,:]-mu1[i,:])\n","    b = 2*np.pi*np.linalg.det(C)\n","    gurk = np.matmul(a,C)\n","    hidden1[j,i] =  np.exp((-0.5*np.matmul(gurk,np.transpose(a))))/(b) \n","    \n","  for j in range(len(test_x)):\n","    a = np.transpose(test_x[j,:]-mu1[i,:])\n","    b = 2*np.pi*np.linalg.det(C)\n","    gurk = np.matmul(a,C)\n","    hiddenTest[j,i] =  np.exp((-0.5*np.matmul(gurk,np.transpose(a))))/(b) \n"," \n","#BATCH least sqares\n","  #LEAST SQUARES\n","A = np.matmul(np.transpose(hidden1),hidden1)\n","b = np.matmul(np.transpose(hidden1),targetUsed1)\n","w = np.linalg.solve(A,b)\n","#Checking error\n","output_training = np.matmul(hidden1,w)\n","output_test = np.matmul(hiddenTest,w)\n","error = np.sqrt(np.mean((output_training-targetUsed1))**2)\n","\n","error_test = np.sqrt(np.mean((output_test-test_y))**2)\n","\n","print(error_test)\n","\n","#print(targetUsed1)\n","#NON-CL 0.0020769419282048755 \n","#MED-CL 0.0004229843059207855\n","#ADVANE 0.00023591962602933836\n","\n","\n"],"execution_count":80,"outputs":[{"output_type":"stream","text":["(100, 8)\n","(2, 8)\n","(8, 2)\n","0.003576158099255714\n"],"name":"stdout"}]},{"metadata":{"id":"CipeX1vBprKM","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]},{"metadata":{"id":"VbRrgaCYqJC8","colab_type":"code","colab":{"autoexec":{"startup":false,"wait_interval":0}}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}